name: CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  # check python formatting
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: astral-sh/ruff-action@v3
        name: Ruff

  # check cpp formatting
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      name: Checkout
    - uses: jidicula/clang-format-action@v4.14.0
      name: Clang-Format
      with:
        clang-format-version: '20'

  # run tests on both mac and ubuntu, across all python versions
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-14
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - name: Setup tmate session
        if: ${{ matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest' }}
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - uses: actions/checkout@v4
        name: Checkout
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Install the project
        run: uv sync --dev --verbose
      - name: Run tests
        run: uv run pytest -v

  # # make sure everything still builds, but only one python per system
  # build:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, macos-13, macos-14]
  #   steps:
  #     - uses: actions/checkout@v4
  #       name: Checkout
  #     # If things fail, this allows us to ssh in to fix things
  #     # - name: Setup tmate session
  #     #   uses: mxschmitt/action-tmate@v3
  #     #   if: runner.debug == '1'
  #     #   with:
  #     #     detached: true

  #     # Let vcpkg store caches in github actions
  #     - name: Export GitHub Actions cache environment variables
  #       uses: actions/github-script@v7
  #       with:
  #         script: |
  #           core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
  #           core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

  #     # Do all the building
  #     - run: ./cpp/setup_pipelines.sh
  #       name: Clone pipelines & vcpkg

  #     - uses: pypa/cibuildwheel@v2.23.0
  #       name: Build wheel
  #       env:
  #         CIBW_BUILD: "cp311-manylinux_x86_64 cp311-macosx_x86_64 cp311-macosx_arm64"
  #         # for vcpkg caches
  #         CIBW_ENVIRONMENT: >
  #           VCPKG_BINARY_SOURCES="clear;x-gha,readwrite" 
  #           ACTIONS_CACHE_URL="$ACTIONS_CACHE_URL" 
  #           ACTIONS_RUNTIME_TOKEN="$ACTIONS_RUNTIME_TOKEN"
  #           MACOSX_DEPLOYMENT_TARGET="11"
  #         CIBW_ENVIRONMENT_PASS_LINUX: VCPKG_BINARY_SOURCES ACTIONS_CACHE_URL ACTIONS_RUNTIME_TOKEN

  #     # save artifacts for testing
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
  #         path: ./wheelhouse/*.whl